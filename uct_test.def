include: c/mpi.def
include: macros/uct.def

macros:
    debug: 1

page: test, mpi_frame
    module: c
    exe: mpiexec -np 2 out/test
    am_type: AM_ZCOPY

    # $print Hello world from $mpi_name, $mpi_id/$mpi_size
    $call uct_init
    &call p2p_region, 0, 1
        $call setup_local_addr
        $call connect_uct_ep
        $list msg_handler
        $call uct_am_set_handler, msg_handler
        $(if:is_p1)
            $my int msg = 1234
            $(if:am_type=AM_SHORT)
                $call uct_send_am_int, msg
            $(elif:am_type=AM_BCOPY)
                $call uct_bcopy_int, msg
            $(elif:am_type=AM_ZCOPY)
                $call uct_zcopy_int, msg
        $(else)
            $my int msg = 0
            $while !desc_holder
                $call uct_worker_progress
            msg = *((int *)(desc_holder+1))
            $print "Got msg: $msg"

            $if desc_holder->is_uct_desc
                uct_iface_release_desc(desc_holder)
            $else
                free(desc_holder)

    $call uct_finish

    subcode: connect_uct_ep
        $if $(if_attr).cap.flags & UCT_IFACE_FLAG_CONNECT_TO_EP
            &call uct_create_ep_connect
                $call exch, device
                $call exch, ep
        $else
            $call exch, device
            $call exch, iface
            $call uct_create_ep_iface

        subcode: exch(a)
            $call exchange, p_local_$(a), p_remote_$(a), n_$(a)_addr_len

    subcode: dump_addr(addr)
        $print "[$mpi_id] %ld - %02x%02x%02x%02x", ucp_addr_len, $(addr)[0],$(addr)[1], $(addr)[2], $(addr)[3]

# -------------------------------------------------

fncode: msg_handler(void *arg, void *data, size_t length, unsigned flags): static ucs_status_t
    $print "[callback] sent %d bytes: %d", length, *((int *)data)
    $global struct rx_head * desc_holder = NULL
    # What is the significance? allow early processing message?
    $if flags & UCT_CB_PARAM_FLAG_DESC
        $my struct rx_head * rhead = data
        rhead -= 1
        rhead->is_uct_desc = 1
        desc_holder = rhead
        return UCS_INPROGRESS
    $else
        $global struct rx_head * g_rhead
        g_rhead = malloc(sizeof(struct rx_head) + length)
        g_rhead->is_uct_desc = 0
        memcpy(g_rhead+1, data, length)
        desc_holder = g_rhead
        return UCS_OK
